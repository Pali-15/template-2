stages:
  - build
  - test
  - post-test

workflow:
  rules:
    # https://docs.gitlab.com/ci/yaml/workflow/#switch-between-branch-pipelines-and-merge-request-pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_PIPELINE_SOURCE == "push"

default:
  image: ghcr.io/cirruslabs/flutter:3.29.3
  tags:
    - docker
    - wtcloud
  before_script:
    - flutter pub get
  cache: &global_cache
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .dart_tool
      - lib/**/*.g.dart
      - lib/**/*.freezed.dart
      - test/**/*.mocks.dart
    policy: pull
  interruptible: true

.source-file-changed-rules:
  # jobs with these rules should only run when any source file changes
  rules: &source-file-changed-rules
    - changes: &source-file-changed
        - 'lib/**/*.dart'
        - 'test/**/*.dart'
        - 'ios/**'
        - 'android/**'
        - 'assets/**'
        - 'fonts/**'
        - '*.yaml'
        - 'pubspec.lock'
        - '.gitlab-ci.yml'
      when: on_success
    - when: never

variables:
  LCOV_FILE: ./coverage/lcov.info
  PYTHON_IMAGE: python:3.13-slim

build:build-runner:
  stage: build
  script:
    - flutter gen-l10n
    - flutter pub run build_runner build
  cache:
    <<: *global_cache
    policy: push
  rules: *source-file-changed-rules

build:format:
  stage: build
  script:
    - dart format -o none --set-exit-if-changed lib/
  cache: []
  rules: *source-file-changed-rules

test:unit:
  stage: test
  script:
    - flutter test --no-pub -r expanded --branch-coverage --file-reporter "json:test_output.json"
    - dart pub global activate junitreport
    - dart pub global run junitreport:tojunit --input test_output.json --output test_report.xml
  artifacts:
    reports:
      junit: test_report.xml
    paths:
      - test_report.xml
      - $LCOV_FILE
  rules: *source-file-changed-rules

test:analyze:
  stage: test
  script:
    - dart analyze --fatal-infos lib/ 
  rules: *source-file-changed-rules

coverage:parse:
  stage: post-test
  image: repository.ci.webtown.hu/webtown/lcov:1.16-r0
  script:
    - lcov --rc lcov_branch_coverage=1 -r $LCOV_FILE '*.g.dart' -o $LCOV_FILE
  needs:
    - job: test:unit
      artifacts: true
  artifacts:
    name: coverage_lcov
    paths:
      - $LCOV_FILE
  cache: []
  inherit:
    default:
      - tags
      - interruptible
  rules: *source-file-changed-rules

coverage:lines:
  stage: post-test
  image: repository.ci.webtown.hu/webtown/lcov:1.16-r0
  script:
    - lcov --rc lcov_branch_coverage=1 --summary $LCOV_FILE | grep -Eo "lines.*?\d+\.\d+%"
  coverage: '/lines.*?\d+\.\d+%/'
  needs:
    - job: coverage:parse
      artifacts: true
      optional: true
  cache: []
  inherit:
    default:
      - tags
      - interruptible
  rules: *source-file-changed-rules

coverage:cobertura:
  stage: post-test
  image: $PYTHON_IMAGE
  script:
    - pip install setuptools
    - pip install lcov_cobertura
    - lcov_cobertura $LCOV_FILE -o coverage.xml
  needs:
    - job: coverage:parse
      artifacts: true
      optional: true
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  cache: []
  inherit:
    default:
      - tags
      - interruptible
  rules: *source-file-changed-rules